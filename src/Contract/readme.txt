These test lock down the backwards compatible behaviour of the version being tested. 
They can (and should) be retired when the version being tested moves from obsolete to removed.

This project must never reference anything but Startup in the Host project (required for WebApplicationFactory testing) directly, as to prevent automatic refactorings from changing code.
The tests must run against the service endpoints with their own service proxies generated manually in this project or manually via Swagger.



# Running the same tests against all endpoint versions, opting in/out on specific versions for specific tests
## Using TestFixtureSource / fixture-level constructs
TestFixtureSource is unusable "as is", as it cannot accept additional metadata (it will always run the entire fixture(s) for any versions generated by it). I tried implementing opt-out support by

- deriving TestCaseAttribute with additional opt-out metadata 
  - (tests were not recognized by ReSharper test runner)
  - Could add metadata via marker attribute (e.g. "[VersionsSupportedByTest("V1","V2")]" but that requires a hook in TestFixtureSource to ignore tests based on attribute metadata)
- deriving TestFixtureSourceAttribute 
  - (nothing is virtual so cannot poke behaviour)
- deriving IFixtureBuilder2 / IFixtureBuilder directly as an alternative to deriving TestFixtureSourceAttribute 
  - (tests were not recognized- https://youtrack.jetbrains.com/issue/RSRP-476083)


## Using TestCaseSource